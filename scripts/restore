#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source ../settings/scripts/ynh_redis
source ../settings/scripts/ynh_uwsgi_service__2
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..."

test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX web server configuration..."

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..."

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..."

ynh_restore_file --origin_path="$final_path"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..."

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Restoring the PostgreSQL database..."

db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
ynh_psql_test_if_first_run
ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
ynh_psql_execute_file_as_root --file="./db.sql" --database=$db_name

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..."

ynh_restore_file --origin_path="/etc/systemd/system/${app}_authorized_keys_worker.service"
systemctl enable ${app}_authorized_keys_worker.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_ci.service"
systemctl enable ${app}_ci.service --quiet
#ynh_restore_file --origin_path="/etc/systemd/system/${app}_ev_server.service"
#systemctl enable ${app}_ev_server.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_gitolite_worker.service"
systemctl enable ${app}_gitolite_worker.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_loadjson.service"
systemctl enable ${app}_loadjson.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_logcom.service"
systemctl enable ${app}_logcom.service --quiet
#ynh_restore_file --origin_path="/etc/systemd/system/${app}_milters.service"
#systemctl enable ${app}_milters.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_mirror.service"
systemctl enable ${app}_mirror.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_webhook.service"
systemctl enable ${app}_webhook.service --quiet
ynh_restore_file --origin_path="/etc/systemd/system/${app}_worker.service"
systemctl enable ${app}_worker.service --quiet

ynh_add_uwsgi_service --service="$app" --template="uwsgi.ini"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add ${app}_authorized_keys_worker
yunohost service add ${app}_ci
#yunohost service add ${app}_ev_server
yunohost service add ${app}_gitolite_worker
yunohost service add ${app}_loadjson
yunohost service add ${app}_logcom
#yunohost service add ${app}_milters
yunohost service add ${app}_mirror
yunohost service add ${app}_webhook
yunohost service add ${app}_worker

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=${app}_authorized_keys_worker --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_ci --action="start" --log_path="systemd" --line_match="ready"
#ynh_systemd_action --service_name=${app}_ev_server --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_gitolite_worker --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_loadjson --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_logcom --action="start" --log_path="systemd" --line_match="ready"
#ynh_systemd_action --service_name=${app}_milters --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_mirror --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_webhook --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name=${app}_worker --action="start" --log_path="systemd" --line_match="ready"
ynh_systemd_action --service_name="uwsgi-app@$app.service" --action="start" --log_path="systemd" --line_match="Started"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app"
